/* app/globals.css with modern arcade theme */
@import url('https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap');

:root {
  /* Base colors */
  --bg-dark: #0f0a1e;
  --bg-gradient-from: #1a1025;
  --bg-gradient-via: #2d1246;
  --bg-gradient-to: #3d1146;
  
  /* Neon colors */
  --neon-pink: #ff1493;
  --neon-pink-glow: rgba(255, 20, 147, 0.8);
  --neon-cyan: #00f7ff;
  --neon-cyan-glow: rgba(0, 247, 255, 0.8);
  --neon-purple: #bf00ff;
  --neon-purple-glow: rgba(191, 0, 255, 0.8);
  
  /* Text colors */
  --text-light: #ffffff;
  --text-pink: #ff80bf;
  --text-cyan: #80ffff;
  --text-purple: #c080ff;
  
  /* Border colors */
  --border-light: rgba(255, 128, 191, 0.3);
  --border-medium: rgba(255, 128, 191, 0.5);
  --border-dark: rgba(255, 128, 191, 0.7);
  
  /* Shadow colors */
  --shadow-pink: rgba(255, 20, 147, 0.5);
  --shadow-cyan: rgba(0, 247, 255, 0.5);
  --shadow-purple: rgba(191, 0, 255, 0.5);
}

body {
  background-color: var(--bg-dark);
  color: var(--text-light);
  font-family: 'Press Start 2P', monospace;
  image-rendering: pixelated;
}

/* Typography */
.font-pixel {
  font-family: 'Press Start 2P', monospace;
  letter-spacing: 0.5px;
  line-height: 1.5;
}

/* Modern neon text effect */
.text-neon-pink {
  color: var(--neon-pink);
  text-shadow: 0 0 5px var(--neon-pink-glow), 0 0 10px var(--neon-pink-glow);
}

.text-neon-cyan {
  color: var(--neon-cyan);
  text-shadow: 0 0 5px var(--neon-cyan-glow), 0 0 10px var(--neon-cyan-glow);
}

.text-neon-purple {
  color: var(--neon-purple);
  text-shadow: 0 0 5px var(--neon-purple-glow), 0 0 10px var(--neon-purple-glow);
}

/* Scanlines effect */
.scanlines {
  position: relative;
  overflow: hidden;
}

.scanlines::before {
  content: "";
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  background: repeating-linear-gradient(
    to bottom,
    transparent 0%,
    rgba(255, 255, 255, 0.05) 0.5%,
    transparent 1%
  );
  pointer-events: none;
  z-index: 10;
}

/* Glitch effect for text */
@keyframes glitch {
  0% {
    transform: translate(0);
  }
  20% {
    transform: translate(-2px, 2px);
  }
  40% {
    transform: translate(-2px, -2px);
  }
  60% {
    transform: translate(2px, 2px);
  }
  80% {
    transform: translate(2px, -2px);
  }
  100% {
    transform: translate(0);
  }
}

.text-glitch {
  animation: glitch 0.2s ease-in-out infinite alternate-reverse;
}

/* Arcade button glow */
.button-glow {
  position: relative;
  overflow: hidden;
}

.button-glow::after {
  content: "";
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 255, 255, 0.2),
    transparent
  );
  animation: button-shine 2s infinite;
}

@keyframes button-shine {
  100% {
    left: 200%;
  }
}

/* Modern animations */
@keyframes float {
  0%, 100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-8px);
  }
}

@keyframes pulse {
  0%, 100% {
    opacity: 1;
    transform: scale(1);
  }
  50% {
    opacity: 0.7;
    transform: scale(0.95);
  }
}

@keyframes glow {
  0%, 100% {
    box-shadow: 0 0 5px var(--shadow-pink);
  }
  50% {
    box-shadow: 0 0 20px var(--shadow-pink);
  }
}

.animate-float {
  animation: float 4s ease-in-out infinite;
}

.animate-pulse {
  animation: pulse 2s ease-in-out infinite;
}

.animate-glow {
  animation: glow 2s ease-in-out infinite;
}

.animate-fade-in {
  animation: fadeIn 0.5s forwards;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* CRT Screen Effect */
.crt-screen {
  position: relative;
  overflow: hidden;
  border-radius: 6px;
}

.crt-screen::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: radial-gradient(
    ellipse at center,
    transparent 0%,
    rgba(0, 0, 0, 0.2) 80%,
    rgba(0, 0, 0, 0.4) 100%
  );
  pointer-events: none;
}

/* Grid background */
.grid-bg {
  background-image: linear-gradient(to right, var(--border-light) 1px, transparent 1px),
                    linear-gradient(to bottom, var(--border-light) 1px, transparent 1px);
  background-size: 20px 20px;
}

/* Perspective grid */
.perspective-grid {
  background-image: linear-gradient(to right, var(--border-light) 1px, transparent 1px),
                    linear-gradient(to bottom, var(--border-light) 1px, transparent 1px);
  background-size: 40px 40px;
  transform: perspective(500px) rotateX(60deg);
  transform-origin: center top;
}

/* Utility animations */
.animate-bounce {
  animation: bounce 0.5s ease-in-out;
}

@keyframes bounce {
  0%, 100% {
    transform: translateY(0);
  }
  40% {
    transform: translateY(-15px);
  }
  60% {
    transform: translateY(-7px);
  }
}

/* Rainbow text effect */
.text-rainbow {
  background-image: linear-gradient(
    to right,
    var(--neon-pink),
    var(--neon-purple),
    var(--neon-cyan),
    var(--neon-pink)
  );
  background-size: 200% auto;
  color: transparent;
  background-clip: text;
  -webkit-background-clip: text;
  animation: rainbow 4s linear infinite;
}

@keyframes rainbow {
  0% {
    background-position: 0% center;
  }
  100% {
    background-position: 200% center;
  }
}

/* Neon text glow */
.text-glow-pink {
  text-shadow: 0 0 5px var(--neon-pink-glow), 0 0 10px var(--neon-pink-glow);
}

.text-glow-cyan {
  text-shadow: 0 0 5px var(--neon-cyan-glow), 0 0 10px var(--neon-cyan-glow);
}

.text-glow-purple {
  text-shadow: 0 0 5px var(--neon-purple-glow), 0 0 10px var(--neon-purple-glow);
}

/* Responsive adjustments */
@media (max-width: 640px) {
  .font-pixel {
    font-size: 0.8em;
  }
}